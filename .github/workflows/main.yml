name: Deploy to AWS ECR and Terraform Apply
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
permissions:
        id-token: write # This is required for requesting the JWT  
        contents: read
        
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout code  
      uses: actions/checkout@v3  

    - name: Set up Python 3.10.14
      uses: actions/setup-python@v3
      with:
        python-version: '3.10.14'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests
      working-directory: tests
      run: pytest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.IAM_ROLE }}
        role-session-name: AWSSession
        aws-region: us-east-2
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: flask_app_sample
        IMAGE_TAG: latest
      working-directory: app
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v1
    #   with:
    #     terraform_version: 1.0.0

    # - name: Terraform Init
    #   working-directory: tf
    #   run: terraform init

    # - name: Terraform Plan
    #   working-directory: tf
    #   run: terraform plan

    # - name: Terraform Apply
    #   working-directory: tf
    #   run: terraform apply -auto-approve

    # - name: Terraform Destroy
    #   if: failure()
    #   run: terraform destroy -auto-approve
    